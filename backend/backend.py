#!/usr/bin/env python3
"""
Script de lancement du backend GMBS
G√®re l'import automatique des donn√©es CSV et le d√©marrage du serveur
"""

import os
import sys
import subprocess
import time
from pathlib import Path

def check_python_version():
    """V√©rifie la version de Python"""
    if sys.version_info < (3, 8):
        print("‚ùå Python 3.8+ requis")
        sys.exit(1)
    print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor} d√©tect√©")

def check_dependencies():
    """V√©rifie et installe les d√©pendances"""
    print("üîç V√©rification des d√©pendances...")
    
    try:
        import fastapi
        import uvicorn
        import sqlalchemy
        import pydantic
        print("‚úÖ Toutes les d√©pendances sont install√©es")
    except ImportError as e:
        print(f"‚ùå D√©pendance manquante: {e}")
        print("üì¶ Installation des d√©pendances...")
        subprocess.run([sys.executable, "-m", "pip", "install", 
                       "fastapi", "uvicorn[standard]", "sqlalchemy", "pydantic", 
                       "python-multipart", "python-jose[cryptography]", 
                       "passlib[bcrypt]", "python-dotenv", "alembic"], check=True)
        print("‚úÖ D√©pendances install√©es")

def start_server():
    """D√©marre le serveur FastAPI"""
    print("üöÄ D√©marrage du serveur backend...")
    print("üì° Serveur accessible sur: http://localhost:8001")
    print("üìö Documentation: http://localhost:8001/docs")
    print("üîç Sant√©: http://localhost:8001/health")
    print("\n‚èπÔ∏è  Pour arr√™ter le serveur: Ctrl+C")
    print("=" * 60)
    
    try:
        subprocess.run([
            sys.executable, "-m", "uvicorn", 
            "main:app", 
            "--host", "0.0.0.0", 
            "--port", "8001", 
            "--reload"
        ], check=True)
    except KeyboardInterrupt:
        print("\nüõë Serveur arr√™t√© par l'utilisateur")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erreur lors du d√©marrage du serveur: {e}")
        return False
    
    return True

def main():
    """Fonction principale"""
    print("üéØ GMBS Backend Launcher")
    print("=" * 40)
    
    # V√©rifications pr√©liminaires
    check_python_version()
    check_dependencies()
    
    # D√©marrer le serveur
    start_server()

if __name__ == "__main__":
    main()
