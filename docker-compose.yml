services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: artisan_ai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/artisan_ai?schema=public
      REDIS_URL: redis://redis:6379
      KAFKA_BROKERS: kafka:9092
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      OPENAI_API_KEY: ${OPENAI_API_KEY:-sk-demo-key}
      FRONTEND_URL: http://localhost:3001
      NODE_ENV: development
      PORT: 3000
      DEFAULT_TENANT_ID: 550e8400-e29b-41d4-a716-446655440000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/prisma:/app/prisma
      - /app/node_modules
    command: node dist/main.js

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3001:3001"
    environment:
      VITE_API_URL: http://localhost:3000
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data: 